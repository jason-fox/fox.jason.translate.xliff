<?xml version="1.0" encoding="UTF-8"?>
<xliff xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
       srcLang="en"
       trgLang="de"
       version="2.0">
   <file id="1" original="/document.ditamap">
      <skeleton href="./skl/document.ditamap.skl"/>
      <unit fs:fs="title" id="8585">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Prism JS Plug-in</source>
            <target xml:lang="de">PRISMA JS-Plug-in
</target>
         </segment>
      </unit>
      <unit id="12043">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">prismjs</source>
            <target xml:lang="de">prismjs
</target>
         </segment>
      </unit>
   </file>
   <file id="2" original="/topic.dita">
      <skeleton href="./skl/topic.dita.skl"/>
      <unit fs:fs="title" id="59931">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Basic usage</source>
            <target xml:lang="de">Grundsätzliche Verwendung
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="34217">
         <originalData>
            <data id="sd4e12">&lt;codeph&gt;</data>
            <data id="ed4e12">&lt;/codeph&gt;</data>
            <data id="sd4e14">&lt;codeph&gt;</data>
            <data id="ed4e14">&lt;/codeph&gt;</data>
            <data id="sd4e15">&lt;ph xml:lang="de"&gt;</data>
            <data id="ed4e15">&lt;/ph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">You need to include the <pc dataRefEnd="ed4e12" dataRefStart="sd4e12" fs:fs="code" id="d4e12"><mrk id="md4e12" translate="no" type="term">prism.css</mrk></pc> and <pc dataRefEnd="ed4e14" dataRefStart="sd4e14" fs:fs="code" id="d4e14"><mrk id="md4e14" translate="no" type="term">prism.js</mrk></pc><pc dataRefEnd="ed4e15" dataRefStart="sd4e15" id="d4e15"><mrk id="md4e15" translate="no" type="term">authoring</mrk></pc> files you downloaded in your page. Example: </source>
            <target xml:lang="de">Sie müssen die <pc datarefend="ed4e12"
                   datarefstart="sd4e12"
                   fs:fs="code"
                   id="d4e12">
                  <mrk id="md4e12" translate="no" type="term">prism.css</mrk>
               </pc> und <pc datarefend="ed4e14"
                   datarefstart="sd4e14"
                   fs:fs="code"
                   id="d4e14">
                  <mrk id="md4e14" translate="no" type="term">prism.js</mrk>
               </pc>
               <pc datarefend="ed4e15" datarefstart="sd4e15" id="d4e15">
                  <mrk id="md4e15" translate="no" type="term">authoring</mrk>
               </pc> Dateien, die Sie heruntergeladen haben, in Ihre Seite aufnehmen. Beispiel:
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="51849">
         <originalData>
            <data id="sd4e24">&lt;b&gt;</data>
            <data id="ed4e24">&lt;/b&gt;</data>
            <data id="sd4e26">&lt;i&gt;</data>
            <data id="ed4e26">&lt;/i&gt;</data>
            <data id="sd4e28">&lt;xref format="html" scope="external" href="https://www.w3.org/TR/html52/textlevel-semantics.html#the-code-element"&gt;</data>
            <data id="ed4e28">&lt;/xref&gt;</data>
            <data id="sd4e31">&lt;codeph&gt;</data>
            <data id="ed4e31">&lt;/codeph&gt;</data>
            <data id="sd4e33">&lt;codeph&gt;</data>
            <data id="ed4e33">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Prism does its best to encourage good practices. Therefore, it only works with <pc dataRefEnd="ed4e24" dataRefStart="sd4e24" fs:fs="b" id="d4e24"><mrk id="md4e24" translate="no" type="term">&lt;code&gt;</mrk></pc>elements, since marking up code without a <pc dataRefEnd="ed4e26" dataRefStart="sd4e26" fs:fs="i" id="d4e26"><mrk id="md4e26" translate="no" type="term">&lt;code&gt;</mrk></pc> element is semantically invalid. <pc dataRefEnd="ed4e28" dataRefStart="sd4e28" fs:fs="a" fs:subFs="href,https://www.w3.org/TR/html52/textlevel-semantics.html#the-code-element" id="d4e28"><mrk id="md4e28" translate="no" type="term">According to the HTML5 spec</mrk></pc>, the recommended way to define a code language is a <pc dataRefEnd="ed4e31" dataRefStart="sd4e31" fs:fs="code" id="d4e31"><mrk id="md4e31" translate="no" type="term">language-xxxx</mrk></pc>class, which is what Prism uses. Alternatively, Prism also supports a shorter version: <pc dataRefEnd="ed4e33" dataRefStart="sd4e33" fs:fs="code" id="d4e33"><mrk id="md4e33" translate="no" type="term">lang-xxxx</mrk></pc>. </source>
            <target xml:lang="de">PRISMA tut sein bestes, um bewährte Praktiken zu fördern. Daher funktioniert es nur mit <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e24"
                   dataRefStart="sd4e24"
                   fs:fs="b"
                   id="d4e24">
                  <mrk class="notranslate" id="md4e24" type="term">&lt;code&gt;</mrk>
               </pc>Elemente, da die Auszeichnung von code ohne <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e26"
                   dataRefStart="sd4e26"
                   fs:fs="i"
                   id="d4e26">
                  <mrk class="notranslate" id="md4e26" type="term">&lt;code&gt;</mrk>
               </pc> element ist semantisch ungültig. <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e28"
                   dataRefStart="sd4e28"
                   fs:fs="a"
                   fs:subFs="href,https://www.w3.org/TR/html52/textlevel-semantics.html#the-code-element"
                   id="d4e28">
                  <mrk class="notranslate" id="md4e28" type="term">Gemäß der HTML5-Spezifikation</mrk>
               </pc>die empfohlene Art und Weise zu definieren, die eine code-Sprache ist eine <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e31"
                   dataRefStart="sd4e31"
                   fs:fs="code"
                   id="d4e31">
                  <mrk class="notranslate" id="md4e31" type="term">Sprache-xxxx</mrk>
               </pc>Klasse, das ist das, was Prism verwendet. Alternativ PRISMA unterstützt auch eine kürzere version: <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e33"
                   dataRefStart="sd4e33"
                   fs:fs="code"
                   id="d4e33">
                  <mrk class="notranslate" id="md4e33" type="term">lang-xxxx</mrk>
               </pc>. 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="50700">
         <originalData>
            <data id="sd4e39">&lt;codeph&gt;</data>
            <data id="ed4e39">&lt;/codeph&gt;</data>
            <data id="sd4e41">&lt;codeph&gt;</data>
            <data id="ed4e41">&lt;/codeph&gt;</data>
            <data id="sd4e43">&lt;codeph&gt;</data>
            <data id="ed4e43">&lt;/codeph&gt;</data>
            <data id="sd4e45">&lt;codeph&gt;</data>
            <data id="ed4e45">&lt;/codeph&gt;</data>
            <data id="sd4e47">&lt;codeph&gt;</data>
            <data id="ed4e47">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">To make things easier however, Prism assumes that this language definition is inherited. Therefore, if multiple <pc dataRefEnd="ed4e39" dataRefStart="sd4e39" fs:fs="code" id="d4e39"><mrk id="md4e39" translate="no" type="term">&lt;code&gt;</mrk></pc> elements have the same language, you can add the <pc dataRefEnd="ed4e41" dataRefStart="sd4e41" fs:fs="code" id="d4e41"><mrk id="md4e41" translate="no" type="term">language-xxxx</mrk></pc> class on one of their common ancestors. This way, you can also define a document-wide default language, by adding a <pc dataRefEnd="ed4e43" dataRefStart="sd4e43" fs:fs="code" id="d4e43"><mrk id="md4e43" translate="no" type="term">language-xxxx</mrk></pc> class on the <pc dataRefEnd="ed4e45" dataRefStart="sd4e45" fs:fs="code" id="d4e45"><mrk id="md4e45" translate="no" type="term">&lt;body&gt;</mrk></pc>or <pc dataRefEnd="ed4e47" dataRefStart="sd4e47" fs:fs="code" id="d4e47"><mrk id="md4e47" translate="no" type="term">&lt;html&gt;</mrk></pc> element. </source>
            <target xml:lang="de">Dinge einfacher zu machen, jedoch PRISMA geht davon aus, dass diese Sprache-definition vererbt wird. Daher, wenn mehrere <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e39"
                   dataRefStart="sd4e39"
                   fs:fs="code"
                   id="d4e39">
                  <mrk class="notranslate" id="md4e39" type="term">&lt;code&gt;</mrk>
               </pc> Elemente haben die gleiche Sprache, können Sie die <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e41"
                   dataRefStart="sd4e41"
                   fs:fs="code"
                   id="d4e41">
                  <mrk class="notranslate" id="md4e41" type="term">Sprache-xxxx</mrk>
               </pc> Klasse auf einem Ihrer gemeinsamen Vorfahren. Auf diese Weise können Sie auch definieren ein Dokument-weiten Standard-Sprache ist, indem Sie ein <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e43"
                   dataRefStart="sd4e43"
                   fs:fs="code"
                   id="d4e43">
                  <mrk class="notranslate" id="md4e43" type="term">Sprache-xxxx</mrk>
               </pc> Klasse auf dem <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e45"
                   dataRefStart="sd4e45"
                   fs:fs="code"
                   id="d4e45">
                  <mrk class="notranslate" id="md4e45" type="term">&lt;body&gt;</mrk>
               </pc>oder <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e47"
                   dataRefStart="sd4e47"
                   fs:fs="code"
                   id="d4e47">
                  <mrk class="notranslate" id="md4e47" type="term">&lt;html&gt;</mrk>
               </pc> element. 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="46850">
         <originalData>
            <data id="sd4e53">&lt;codeph&gt;</data>
            <data id="ed4e53">&lt;/codeph&gt;</data>
            <data id="sd4e55">&lt;codeph&gt;</data>
            <data id="ed4e55">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">If you want to opt-out of highlighting for a <pc dataRefEnd="ed4e53" dataRefStart="sd4e53" fs:fs="code" id="d4e53"><mrk id="md4e53" translate="no" type="term">&lt;code&gt;</mrk></pc>element that is a descendant of an element with a declared code language, you can add the class <pc dataRefEnd="ed4e55" dataRefStart="sd4e55" fs:fs="code" id="d4e55"><mrk id="md4e55" translate="no" type="term">language-none</mrk></pc> to it (or any non-existing language, really). </source>
            <target xml:lang="de">Wenn Sie wollen opt-out-highlighting für eine <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e53"
                   dataRefStart="sd4e53"
                   fs:fs="code"
                   id="d4e53">
                  <mrk class="notranslate" id="md4e53" type="term">&lt;code&gt;</mrk>
               </pc>element, das ein Nachfahre eines Elements mit einem deklarierten code-Sprache, die Sie hinzufügen können, die Klasse <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e55"
                   dataRefStart="sd4e55"
                   fs:fs="code"
                   id="d4e55">
                  <mrk class="notranslate" id="md4e55" type="term">Sprache-keine</mrk>
               </pc> um es (oder nicht vorhandenen Sprache, wirklich). 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="25020">
         <originalData>
            <data id="sd4e62">&lt;xref format="html" scope="external" href="https://www.w3.org/TR/html5/grouping-content.html#the-pre-element"&gt;</data>
            <data id="ed4e62">&lt;/xref&gt;</data>
            <data id="sd4e65">&lt;codeph&gt;</data>
            <data id="ed4e65">&lt;/codeph&gt;</data>
            <data id="sd4e67">&lt;codeph&gt;</data>
            <data id="ed4e67">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">The <pc dataRefEnd="ed4e62" dataRefStart="sd4e62" fs:fs="a" fs:subFs="href,https://www.w3.org/TR/html5/grouping-content.html#the-pre-element" id="d4e62"><mrk id="md4e62" translate="no" type="term">recommended way to mark up a code block</mrk></pc> (both for semantics and for Prism) is a <pc dataRefEnd="ed4e65" dataRefStart="sd4e65" fs:fs="code" id="d4e65"><mrk id="md4e65" translate="no" type="term">&lt;pre&gt;</mrk></pc>element with a <pc dataRefEnd="ed4e67" dataRefStart="sd4e67" fs:fs="code" id="d4e67"><mrk id="md4e67" translate="no" type="term">&lt;code&gt;</mrk></pc> element inside, like so: </source>
            <target xml:lang="de">Die <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e62"
                   dataRefStart="sd4e62"
                   fs:fs="a"
                   fs:subFs="href,https://www.w3.org/TR/html5/grouping-content.html#the-pre-element"
                   id="d4e62">
                  <mrk class="notranslate" id="md4e62" type="term">empfohlene Methode zur Markierung einen code-block</mrk>
               </pc> (sowohl für die Semantik und für PRISMA) ist ein <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e65"
                   dataRefStart="sd4e65"
                   fs:fs="code"
                   id="d4e65">
                  <mrk class="notranslate" id="md4e65" type="term">&lt;pre&gt;</mrk>
               </pc>element mit einem <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e67"
                   dataRefStart="sd4e67"
                   fs:fs="code"
                   id="d4e67">
                  <mrk class="notranslate" id="md4e67" type="term">&lt;code&gt;</mrk>
               </pc> element im inneren, etwa so: 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="34362">
         <originalData>
            <data id="sd4e75">&lt;codeph&gt;</data>
            <data id="ed4e75">&lt;/codeph&gt;</data>
            <data id="sd4e77">&lt;codeph&gt;</data>
            <data id="ed4e77">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">If you use that pattern, the <pc dataRefEnd="ed4e75" dataRefStart="sd4e75" fs:fs="code" id="d4e75"><mrk id="md4e75" translate="no" type="term">&lt;pre&gt;</mrk></pc> will automatically get the <pc dataRefEnd="ed4e77" dataRefStart="sd4e77" fs:fs="code" id="d4e77"><mrk id="md4e77" translate="no" type="term">language-xxxx</mrk></pc> class (if it doesn’t already have it) and will be styled as a code block. </source>
            <target xml:lang="de">Wenn Sie das Muster, die <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e75"
                   dataRefStart="sd4e75"
                   fs:fs="code"
                   id="d4e75">
                  <mrk class="notranslate" id="md4e75" type="term">&lt;pre&gt;</mrk>
               </pc> erhalten automatisch den <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e77"
                   dataRefStart="sd4e77"
                   fs:fs="code"
                   id="d4e77">
                  <mrk class="notranslate" id="md4e77" type="term">Sprache-xxxx</mrk>
               </pc> Klasse (wenn es nicht bereits haben) und gestylt werden wie ein code-block. 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="25518">
         <originalData>
            <data id="sd4e83">&lt;codeph&gt;</data>
            <data id="ed4e83">&lt;/codeph&gt;</data>
            <data id="sd4e85">&lt;codeph&gt;</data>
            <data id="ed4e85">&lt;/codeph&gt;</data>
            <data id="sd4e87">&lt;xref format="html" scope="external" href="https://prismjs.com/extending.html#api"&gt;</data>
            <data id="ed4e87">&lt;/xref&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">If you want to prevent any elements from being automatically highlighted, you can use the attribute <pc dataRefEnd="ed4e83" dataRefStart="sd4e83" fs:fs="code" id="d4e83"><mrk id="md4e83" translate="no" type="term">data-manual</mrk></pc> on the <pc dataRefEnd="ed4e85" dataRefStart="sd4e85" fs:fs="code" id="d4e85"><mrk id="md4e85" translate="no" type="term">&lt;script&gt;</mrk></pc>element you used for prism and use the <pc dataRefEnd="ed4e87" dataRefStart="sd4e87" fs:fs="a" fs:subFs="href,https://prismjs.com/extending.html#api" id="d4e87"><mrk id="md4e87" translate="no" type="term">API</mrk></pc>. Example: </source>
            <target xml:lang="de">Wenn Sie verhindern möchten, dass alle Elemente aus, die automatisch markiert ist, können Sie mithilfe der attribute <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e83"
                   dataRefStart="sd4e83"
                   fs:fs="code"
                   id="d4e83">
                  <mrk class="notranslate" id="md4e83" type="term">Daten-Handbuch</mrk>
               </pc> auf der <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e85"
                   dataRefStart="sd4e85"
                   fs:fs="code"
                   id="d4e85">
                  <mrk class="notranslate" id="md4e85" type="term">&lt;script&gt;</mrk>
               </pc>element, die Sie für prism und verwenden Sie die <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e87"
                   dataRefStart="sd4e87"
                   fs:fs="a"
                   fs:subFs="href,https://prismjs.com/extending.html#api"
                   id="d4e87">
                  <mrk class="notranslate" id="md4e87" type="term">API</mrk>
               </pc>. Beispiel: 
</target>
         </segment>
      </unit>
      <unit fs:fs="title" id="33578">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Usage with Webpack, Browserify, &amp; Other Bundlers</source>
            <target xml:lang="de">Verwendung mit Webpack, Browserify, &amp; Andere Bundlers
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="32784">
         <originalData>
            <data id="sd4e101">&lt;codeph&gt;</data>
            <data id="ed4e101">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">If you want to use Prism with a bundler, install Prism with <pc dataRefEnd="ed4e101" dataRefStart="sd4e101" fs:fs="code" id="d4e101"><mrk id="md4e101" translate="no" type="term">npm</mrk></pc>: </source>
            <target xml:lang="de">Wenn Sie verwenden möchten PRISMA mit bundler installieren Sie PRISMA mit <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e101"
                   dataRefStart="sd4e101"
                   fs:fs="code"
                   id="d4e101">
                  <mrk class="notranslate" id="md4e101" type="term">npm</mrk>
               </pc>: 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="4035">
         <originalData>
            <data id="sd4e109">&lt;codeph outputclass="language-js"&gt;</data>
            <data id="ed4e109">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">You can then <pc dataRefEnd="ed4e109" dataRefStart="sd4e109" fs:fs="code" id="d4e109"><mrk id="md4e109" translate="no" type="term">import</mrk></pc> into your bundle: </source>
            <target xml:lang="de">Sie können dann <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e109"
                   dataRefStart="sd4e109"
                   fs:fs="code"
                   id="d4e109">
                  <mrk class="notranslate" id="md4e109" type="term">import</mrk>
               </pc> in Ihr bündeln: 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="57344">
         <originalData>
            <data id="sd4e120">&lt;xref format="html" scope="external" href="https://github.com/mAAdhaTTah/babel-plugin-prismjs"&gt;</data>
            <data id="ed4e120">&lt;/xref&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">To make it easy to configure your Prism instance with only the languages and plugins you need, use the babel plugin, <pc dataRefEnd="ed4e120" dataRefStart="sd4e120" fs:fs="a" fs:subFs="href,https://github.com/mAAdhaTTah/babel-plugin-prismjs" id="d4e120"><mrk id="md4e120" translate="no" type="term">babel-plugin-prismjs</mrk></pc>. This will allow you to load the minimum number of languages and plugins to satisfy your needs. See that plugin's documentation for configuration details. </source>
            <target xml:lang="de">Um es einfach zu konfigurieren Sie Ihre Prism-Instanz nur mit den Sprachen und plugins, die Sie benötigen, verwenden Sie den babel-plugin, <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e120"
                   dataRefStart="sd4e120"
                   fs:fs="a"
                   fs:subFs="href,https://github.com/mAAdhaTTah/babel-plugin-prismjs"
                   id="d4e120">
                  <mrk class="notranslate" id="md4e120" type="term">babel-plugin-prismjs</mrk>
               </pc>. Dies ermöglicht es Ihnen, laden Sie die minimale Anzahl von Sprachen und plugins, um Ihre Bedürfnisse zu befriedigen. Sehen, dass der plugin-Dokumentation für details zur Konfiguration. 
</target>
         </segment>
      </unit>
      <unit fs:fs="title" id="11900">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Usage with Node</source>
            <target xml:lang="de">Verwendung mit Knoten
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="5250">
         <originalData>
            <data id="sd4e134">&lt;xref format="html" scope="external" href="https://www.ampproject.org/"&gt;</data>
            <data id="ed4e134">&lt;/xref&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">If you want to use Prism on the server or through the command line, Prism can be used with Node.js as well. This might be useful if you're trying to generate static HTML pages with highlighted code for environments that don't support browser-side JS, like <pc dataRefEnd="ed4e134" dataRefStart="sd4e134" fs:fs="a" fs:subFs="href,https://www.ampproject.org/" id="d4e134"><mrk id="md4e134" translate="no" type="term">AMP pages</mrk></pc>. </source>
            <target xml:lang="de">Wenn Sie möchten, verwenden Sie Prism auf die server oder die über die Befehlszeile, PRISMA kann verwendet werden, mit Node.js wie gut. Dies kann nützlich sein, wenn Sie versuchen, generieren von statischen HTML-Seiten mit hervorgehobenen code für Umgebungen, die keine Unterstützung für browser-side JS, wie <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e134"
                   dataRefStart="sd4e134"
                   fs:fs="a"
                   fs:subFs="href,https://www.ampproject.org/"
                   id="d4e134">
                  <mrk class="notranslate" id="md4e134" type="term">AMP Seiten</mrk>
               </pc>. 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="60425">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Example: </source>
            <target xml:lang="de">Beispiel: 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="14934">
         <originalData>
            <data id="sd4e147">&lt;codeph&gt;</data>
            <data id="ed4e147">&lt;/codeph&gt;</data>
            <data id="sd4e149">&lt;codeph&gt;</data>
            <data id="ed4e149">&lt;/codeph&gt;</data>
            <data id="sd4e151">&lt;codeph&gt;</data>
            <data id="ed4e151">&lt;/codeph&gt;</data>
            <data id="sd4e153">&lt;codeph&gt;</data>
            <data id="ed4e153">&lt;/codeph&gt;</data>
            <data id="sd4e155">&lt;codeph&gt;</data>
            <data id="ed4e155">&lt;/codeph&gt;</data>
            <data id="sd4e158">&lt;codeph outputclass="language-javascript"&gt;</data>
            <data id="ed4e158">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Requiring <pc dataRefEnd="ed4e147" dataRefStart="sd4e147" fs:fs="code" id="d4e147"><mrk id="md4e147" translate="no" type="term">prismjs</mrk></pc> will load the default languages: <pc dataRefEnd="ed4e149" dataRefStart="sd4e149" fs:fs="code" id="d4e149"><mrk id="md4e149" translate="no" type="term">markup</mrk></pc>, <pc dataRefEnd="ed4e151" dataRefStart="sd4e151" fs:fs="code" id="d4e151"><mrk id="md4e151" translate="no" type="term">css</mrk></pc>, <pc dataRefEnd="ed4e153" dataRefStart="sd4e153" fs:fs="code" id="d4e153"><mrk id="md4e153" translate="no" type="term">clike</mrk></pc> and <pc dataRefEnd="ed4e155" dataRefStart="sd4e155" fs:fs="code" id="d4e155"><mrk id="md4e155" translate="no" type="term">javascript</mrk></pc>. You can load more languages with the <pc dataRefEnd="ed4e158" dataRefStart="sd4e158" fs:fs="code" id="d4e158"><mrk id="md4e158" translate="no" type="term">loadLanguages()</mrk></pc>utility, which will automatically handle any required dependencies. </source>
            <target xml:lang="de">Erfordern <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e147"
                   dataRefStart="sd4e147"
                   fs:fs="code"
                   id="d4e147">
                  <mrk class="notranslate" id="md4e147" type="term">prismjs</mrk>
               </pc> lädt die Standard-Sprachen: <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e149"
                   dataRefStart="sd4e149"
                   fs:fs="code"
                   id="d4e149">
                  <mrk class="notranslate" id="md4e149" type="term">markup</mrk>
               </pc>, <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e151"
                   dataRefStart="sd4e151"
                   fs:fs="code"
                   id="d4e151">
                  <mrk class="notranslate" id="md4e151" type="term">css</mrk>
               </pc>, <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e153"
                   dataRefStart="sd4e153"
                   fs:fs="code"
                   id="d4e153">
                  <mrk class="notranslate" id="md4e153" type="term">gleich</mrk>
               </pc> und <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e155"
                   dataRefStart="sd4e155"
                   fs:fs="code"
                   id="d4e155">
                  <mrk class="notranslate" id="md4e155" type="term">javascript</mrk>
               </pc>. Laden Sie weitere Sprachen mit der <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e158"
                   dataRefStart="sd4e158"
                   fs:fs="code"
                   id="d4e158">
                  <mrk class="notranslate" id="md4e158" type="term">loadLanguages()</mrk>
               </pc>Dienstprogramm, das automatisch verarbeitet alle erforderlichen Abhängigkeiten. 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="60425">
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve">Example: </source>
            <target xml:lang="de">Beispiel: 
</target>
         </segment>
      </unit>
      <unit fs:fs="p" id="34183">
         <originalData>
            <data id="sd4e172">&lt;b&gt;</data>
            <data id="ed4e172">&lt;/b&gt;</data>
            <data id="sd4e174">&lt;i&gt;</data>
            <data id="ed4e174">&lt;/i&gt;</data>
            <data id="sd4e176">&lt;codeph outputclass="language-javascript"&gt;</data>
            <data id="ed4e176">&lt;/codeph&gt;</data>
         </originalData>
         <segment state="translated">
            <source xml:lang="en" xml:space="preserve"> <pc dataRefEnd="ed4e172" dataRefStart="sd4e172" fs:fs="b" id="d4e172"><mrk id="md4e172" translate="no" type="term">Note</mrk></pc>: Do <pc dataRefEnd="ed4e174" dataRefStart="sd4e174" fs:fs="i" id="d4e174"><mrk id="md4e174" translate="no" type="term">not</mrk></pc> use <pc dataRefEnd="ed4e176" dataRefStart="sd4e176" fs:fs="code" id="d4e176"><mrk id="md4e176" translate="no" type="term">loadLanguages()</mrk></pc>with Webpack or another bundler, as this will cause Webpack to include all languages and plugins. Use the babel plugin described above. </source>
            <target xml:lang="de">
               <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e172"
                   dataRefStart="sd4e172"
                   fs:fs="b"
                   id="d4e172">
                  <mrk class="notranslate" id="md4e172" type="term">Hinweis</mrk>
               </pc>: Tun <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e174"
                   dataRefStart="sd4e174"
                   fs:fs="i"
                   id="d4e174">
                  <mrk class="notranslate" id="md4e174" type="term">nicht</mrk>
               </pc> verwenden <pc xmlns:fs="urn:oasis:names:tc:xliff:fs:2.0"
                   dataRefEnd="ed4e176"
                   dataRefStart="sd4e176"
                   fs:fs="code"
                   id="d4e176">
                  <mrk class="notranslate" id="md4e176" type="term">loadLanguages()</mrk>
               </pc>mit Webpack oder anderen bundler, da dies dazu führen Webpack alle Sprachen und plugins. Verwenden Sie den babel-plugin wie oben beschrieben. 
</target>
         </segment>
      </unit>
   </file>
</xliff>
